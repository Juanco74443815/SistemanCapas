<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IAf/2Q==
</value>
  </data>
</root>